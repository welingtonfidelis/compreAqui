scalar Upload

type token {
    name: String,
    token: String,
    typeUser: String,
    typeUserEncript: String,
    photoUrl: String
}

type Address {
    id: ID,
    cep: String,
    state: String,
    city: String,
    district: String,
    street: String,
    complement: String,
    number: Int
}

type State {
    id: ID,
    description: String,
    code: String
}

type Category {
    id: ID,
    name: String
}

type Subcategory {
    id: ID,
    CategoryId: ID,
    name: String
}

type User {
    id: ID,
    name: String,
    doc: String,
    email: String,
    phone1: String,
    phone2: String,
    user: String,
    birth: String,
    photoUrl: String,
    tokenReset: String,
    type: String,
    Address: Address,
    Category: Category,
    Subcategory: Subcategory,
    playId: String
}

type Brand {
    id: ID,
    ProviderId: ID,
    brandDescription: String
}

type Size {
    id: ID,
    ProviderId: ID,
    sizeDescription: String
}

type Product {
    id: ID,
    ProviderId: ID,
    BrandId: ID,
    SizeId: ID,
    SubcategoryId: ID,
    name: String,
    description: String,
    price: Float,
    stock: Int,
    Provider: User,
    Brand: Brand,
    Size: Size,
    ProductPhotos: [ProductPhoto]
}

type ProductPhoto {
    id: ID,
    ProductId: ID,
    photoUrl: String
}

type Request {
    id: ID,
    ClientId: ID,
    ProviderId: ID,
    timeWait: Int,
    value: Float,
    status: String,
    delivery: String,
    cashBack: Float,
    createdAt: String,
    Client: User,
    Provider: User,
    observation: String,
    reason: String,
    RequestProducts: [RequestProducts]
}

input RequestListProduct {
    id: ID,
    amount: Int
    price: Float
}

type RequestProducts {
    id: ID,
    RequestId: ID,
    ProductId: ID,
    amount: Int,
    price: Float,
    request: Request,
    Product: Product
}

#rota para retornos de informações
type Query {
    ##===========> TESTES <============##
    test: String

    ##===========> USUÁRIO <============##
    userIndex(page: Int): [User]
    userIndexByCategory(page: Int, CategoryId: ID!): [User]
    userShow(id: ID!): User
    userShowByDoc(doc: String!): User
    userShowByEmail(email: String!): User
    userShowByUser(user: String!): User

    ##===========> SESSÃO/LOGIN <============##
    sessionSign(user: String!, password: String!, playId: String): token

    ##===========> MARCA <============##
    brandCount: Int
    brandIndex(page: Int): [Brand]
    brandShow(id: ID!): Brand

    ##===========> ESTADO <============##
    stateIndex(page: Int): [State]

    ##===========> CATEGORIA <============##
    categoryIndex: [Category]

    ##===========> SUBCATEGORIA <============##
    subcategoryIndex: [Subcategory]
    subcategoryIndexByUser: [Subcategory]

    ##===========> TAMANHO <============##
    sizeCount: Int
    sizeIndex(page: Int): [Size]
    sizeShow(id: ID!): Size

    ##===========> PRODUTO <============##
    productIndex(ProviderId: ID, page: Int): [Product]
    productCount(ProviderId: ID): Int
    productShow(id: ID!): Product

    ##===========> PEDIDO <============##
    requestIndex(page: Int, status: String): [Request]
    requestCount(status: String): Int

    ##===========> PEDIDO/PRODUTO <============##
    requestShow(id: ID!): Request

}

# rota para alteração de informações
type Mutation {
    photoTest: String
    uploadFile(input: Upload!): String
    
    ##===========> USUÁRIO <============##
    userStore(
        name: String!,
        doc: String!,
        email: String!,
        phone1: String!,
        phone2: String!,
        user: String!,
        birth: String!,
        password: String!,
        type: String!,
        cep: String!,
        state: String!,
        city: String!,
        district: String!,
        street: String!,
        complement: String!,
        number: Int!
    ): User

    userUpdate(
        id: ID!,
        name: String!,
        doc: String!,
        email: String!,
        phone1: String!,
        phone2: String!,
        user: String!,
        birth: String!,
        password: String!,
        type: String!,
        AddressId: ID,
        cep: String!,
        state: String!,
        city: String!,
        district: String!,
        street: String!,
        complement: String!,
        number: Int!
    ): String

    userDelete(
        id: ID!
    ): String

    ##===========> MARCA <============##
    brandStore(
        brandDescription: String!,
    ): Brand

    brandUpdate(
        id: ID!
        brandDescription: String!
    ): String

    brandDelete(
        id: ID!
    ): String

    ##===========> TAMANHO <============##
    sizeStore(
        sizeDescription: String!,
    ): Size

    sizeUpdate(
        id: ID!
        sizeDescription: String!
    ): String

    sizeDelete(
        id: ID!
    ): String

    ##===========> PRODUTO <============##
    productStore(
        BrandId: ID!,
        SizeId: ID!,
        SubcategoryId: ID!,
        name: String!,
        description: String,
        price: Float!,
        stock: Int!,
    ): Product

    productUpdate(
        id: ID!,
        BrandId: ID!,
        SizeId: ID!,
        SubcategoryId: ID!,
        description: String!,
        price: Float!,
        stock: Int!,
    ): String

    productDelete(
        id: ID!,
    ): String

    ##===========> PEDIDO <============##
    requestStore (
        ProviderId: ID!,
        value: Float!,
        delivery: String!,
        cashBack: Float!,
        observation: String,
        products: [RequestListProduct!]
    ): Request

    requestChangeStatus (
        id: ID!,
        status: String,
        timeWait: Int,
        reason: String
    ): String

}